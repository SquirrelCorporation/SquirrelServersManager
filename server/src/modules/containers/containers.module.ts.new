import { Module } from '@nestjs/common';
import { MongooseModule } from '@nestjs/mongoose';
import { ShellModule } from '../shell/shell.module';
import { PlaybooksModule } from '../playbooks/playbooks.module';
import { StatisticsModule } from '../statistics/statistics.module';
import { DevicesModule } from '../devices/devices.module';

// Schemas
import { CONTAINER, ContainerSchema } from './infrastructure/schemas/container.schema';
import { PROXMOX_CONTAINER, ProxmoxContainerSchema } from './infrastructure/schemas/proxmox-container.schema';
import { CONTAINER_NETWORK, ContainerNetworkSchema } from './infrastructure/schemas/container-network.schema';
import { CONTAINER_VOLUME, ContainerVolumeSchema } from './infrastructure/schemas/container-volume.schema';
import { CONTAINER_REGISTRY, ContainerRegistrySchema } from './infrastructure/schemas/container-registry.schema';
import { CONTAINER_IMAGE, ContainerImageSchema } from './infrastructure/schemas/container-image.schema';

// Infrastructure
import { ContainerRepository } from './infrastructure/repositories/container.repository';
import { ProxmoxContainerRepository } from './infrastructure/repositories/proxmox-container.repository';
import { ContainerNetworkRepository } from './infrastructure/repositories/container-network.repository';
import { ContainerVolumeRepository } from './infrastructure/repositories/container-volume.repository';
import { ContainerRegistryRepository } from './infrastructure/repositories/container-registry.repository';
import { ContainerImageRepository } from './infrastructure/repositories/container-image.repository';
import { ContainerMapper } from './infrastructure/mappers/container.mapper';
import { ContainerNetworkMapper } from './infrastructure/mappers/container-network.mapper';

// Application Services
import { ContainerService } from './application/services/container.service';
import { ContainerNetworksService } from './application/services/container-networks.service';
import { WatcherEngineService } from './application/services/engine/watcher-engine.service';
import { ContainerLogsService } from './application/services/container-logs.service';
import { ContainerComponentFactory } from './application/services/components/component-factory.service';

// Presentation
import { ContainersController } from './presentation/controllers/containers.controller';
import { ContainerNetworksController } from './presentation/controllers/container-networks.controller';
import { ContainerVolumesController } from './presentation/controllers/container-volumes.controller';
import { ContainerImagesController } from './presentation/controllers/container-images.controller';
import { ContainerRegistriesController } from './presentation/controllers/container-registries.controller';
import { ContainerStatsController } from './presentation/controllers/container-stats.controller';
import { ContainerLogsGateway } from './presentation/gateways/container-logs.gateway';

// Domain repositories interfaces
import { CONTAINER_REPOSITORY } from './domain/repositories/container-repository.interface';
import { CONTAINER_NETWORK_REPOSITORY } from './domain/repositories/container-network-repository.interface';
import { CONTAINER_VOLUME_REPOSITORY } from './domain/repositories/container-volume-repository.interface';
import { CONTAINER_IMAGE_REPOSITORY } from './domain/repositories/container-image-repository.interface';

// Application services interfaces
import { CONTAINER_SERVICE } from './application/interfaces/container-service.interface';
import { CONTAINER_NETWORKS_SERVICE } from './application/interfaces/container-networks-service.interface';
import { CONTAINER_VOLUMES_SERVICE } from './application/interfaces/container-volumes-service.interface';
import { CONTAINER_IMAGES_SERVICE } from './application/interfaces/container-images-service.interface';
import { WATCHER_ENGINE_SERVICE } from './application/interfaces/watcher-engine-service.interface';
import { CONTAINER_LOGS_SERVICE } from './application/interfaces/container-logs-service.interface';
import { ContainerVolumesService } from './application/services/container-volumes.service';
import { ContainerImagesService } from './application/services/container-images.service';

/**
 * ContainersModule provides services for managing Docker containers, volumes, networks, images, and registries
 * Using Clean Architecture principles
 */
@Module({
  imports: [
    MongooseModule.forFeature([
      { name: CONTAINER, schema: ContainerSchema },
      { name: PROXMOX_CONTAINER, schema: ProxmoxContainerSchema },
      { name: CONTAINER_NETWORK, schema: ContainerNetworkSchema },
      { name: CONTAINER_VOLUME, schema: ContainerVolumeSchema },
      { name: CONTAINER_REGISTRY, schema: ContainerRegistrySchema },
      { name: CONTAINER_IMAGE, schema: ContainerImageSchema },
    ]),
    ShellModule,
    PlaybooksModule,
    StatisticsModule,
    DevicesModule,
  ],
  controllers: [
    ContainersController,
    ContainerNetworksController,
    ContainerVolumesController,
    ContainerImagesController,
    ContainerRegistriesController,
    ContainerStatsController,
  ],
  providers: [
    // Domain and Infrastructure mappers
    ContainerMapper,
    ContainerNetworkMapper,
    
    // Infrastructure repositories
    ContainerRepository,
    ProxmoxContainerRepository,
    ContainerNetworkRepository,
    ContainerVolumeRepository,
    ContainerRegistryRepository,
    ContainerImageRepository,
    
    // Domain repositories
    {
      provide: CONTAINER_REPOSITORY,
      useClass: ContainerRepository,
    },
    {
      provide: CONTAINER_NETWORK_REPOSITORY,
      useClass: ContainerNetworkRepository,
    },
    {
      provide: CONTAINER_VOLUME_REPOSITORY,
      useClass: ContainerVolumeRepository,
    },
    {
      provide: CONTAINER_IMAGE_REPOSITORY,
      useClass: ContainerImageRepository,
    },
    
    // Component factory
    ContainerComponentFactory,
    
    // Application services
    ContainerService,
    {
      provide: CONTAINER_SERVICE,
      useClass: ContainerService,
    },
    ContainerNetworksService,
    {
      provide: CONTAINER_NETWORKS_SERVICE,
      useClass: ContainerNetworksService,
    },
    ContainerVolumesService,
    {
      provide: CONTAINER_VOLUMES_SERVICE,
      useClass: ContainerVolumesService,
    },
    ContainerImagesService,
    {
      provide: CONTAINER_IMAGES_SERVICE,
      useClass: ContainerImagesService,
    },
    WatcherEngineService,
    {
      provide: WATCHER_ENGINE_SERVICE,
      useClass: WatcherEngineService,
    },
    ContainerLogsService,
    {
      provide: CONTAINER_LOGS_SERVICE,
      useClass: ContainerLogsService,
    },
    
    // Presentation
    ContainerLogsGateway,
  ],
  exports: [
    // Domain repositories
    CONTAINER_REPOSITORY,
    CONTAINER_NETWORK_REPOSITORY,
    CONTAINER_VOLUME_REPOSITORY,
    CONTAINER_IMAGE_REPOSITORY,
    
    // Application services
    CONTAINER_SERVICE,
    CONTAINER_NETWORKS_SERVICE,
    CONTAINER_VOLUMES_SERVICE,
    CONTAINER_IMAGES_SERVICE,
    WATCHER_ENGINE_SERVICE,
    CONTAINER_LOGS_SERVICE,
    
    // Component factory
    ContainerComponentFactory,
    
    // Concrete implementations 
    ContainerService,
    ContainerNetworksService,
    ContainerVolumesService,
    ContainerImagesService,
    WatcherEngineService,
    ContainerLogsService,
    
    // Infrastructure repositories
    ContainerRepository,
    ProxmoxContainerRepository,
    ContainerNetworkRepository,
    ContainerVolumeRepository,
    ContainerRegistryRepository,
    ContainerImageRepository,
  ],
})
export class ContainersModule {}